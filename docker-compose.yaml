name: mc

services:

    accesspanel:
        build:
            context: .
            dockerfile: docker/accesspanel/Dockerfile
            target: build-dev
        container_name: mc-accesspanel
        restart: unless-stopped
        tty: true
        stdin_open: true
        ports:
            - "${ACCESSPANEL_EXTERNAL_HTTP_PORT}:80"
        environment:
            - DATABASE_URL="mysql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DBNAME}?serverVersion=${DATABASE_SERVER_VERSION}&charset=${DATABASE_CHARSET}"
        networks:
            - mc_net

    database:
        image: mariadb:latest
        container_name: mc-database
        restart: unless-stopped
        volumes:
            - "database-data:/var/lib/mysql"
        environment:
            - MARIADB_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
            - MARIADB_USER=${DATABASE_USER}
            - MARIADB_PASSWORD=${DATABASE_PASSWORD}
            - MARIADB_DATABASE=${DATABASE_DBNAME}

    webconsole:
        build:
            context: .
            dockerfile: docker/webpanel/Dockerfile
        container_name: webconsole
        restart: unless-stopped
        ports:
            - "${WEBCONSOLE_EXTERNAL_HTTP_PORT}:80"
        networks:
            - mc_net
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.whoami.rule=Host(`oraclevm.lagan.net.pl`)"
            - "traefik.http.routers.whoami.entrypoints=websecure"
            - "traefik.http.routers.whoami.tls.certresolver=myresolver"

    minepass-r:
        build:
            context: .
            dockerfile: docker/minepass/Dockerfile
        container_name: minepass-r
        restart: unless-stopped
        ports:
            - "${MINEPASS_EXTERNAL_HTTP_PORT_R}:8080"
        environment:
            - MP_HOST=minecraft-r:${RCON_PORT_R}
            - MP_PASSWORD=${RCON_PASSWORD_R}
            - MP_UI_PASSWORD=${MINEPASS_UI_PASSWORD_P}
            - MP_TITLE='Wpisz hasło aby dodać swojego nicka do białej listy'
        networks:
            - mc_net
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.whoami.rule=Host(`s5c.lagan.net.pl`)"
            - "traefik.http.routers.whoami.entrypoints=websecure"
            - "traefik.http.routers.whoami.tls.certresolver=myresolver"

    minepass-p:
        build:
            context: .
            dockerfile: docker/minepass/Dockerfile
        container_name: minepass-p
        restart: unless-stopped
        ports:
            - "${MINEPASS_EXTERNAL_HTTP_PORT_P}:8080"
        environment:
            - MP_HOST=minecraft-p:${RCON_PORT_P}
            - MP_PASSWORD=${RCON_PASSWORD_P}
            - MP_UI_PASSWORD=${MINEPASS_UI_PASSWORD_R}
            - MP_TITLE='Wpisz hasło aby dodać swojego nicka do białej listy'
        networks:
            - mc_net
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.whoami.rule=Host(`s2c.lagan.net.pl`)"
            - "traefik.http.routers.whoami.entrypoints=websecure"
            - "traefik.http.routers.whoami.tls.certresolver=myresolver"

    traefik:
        image: traefik:v3.3
        container_name: traefik
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entryPoints.websecure.address=:443"
            - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
            - "--certificatesresolvers.myresolver.acme.email=${TRAEFIK_LETSENCRYPT_EMAIL}"
            - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
        ports:
            - "443:443"
            - "${TRAEFIK_EXTERNAL_HTTP_PORT}:8080"
        volumes:
            - "${TRAEFIK_LETSENCRYPT_DATA_FOLDER}:/letsencrypt"
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        networks:
            - mc_net

    minecraft-r:
        image: 05jchambers/legendary-minecraft-purpur-geyser:latest
        container_name: minecraft-r
        stdin_open: true
        tty: true
        restart: unless-stopped
        volumes:
            - "${DATA_FOLDER_R}:/minecraft"
        ports:
            - "${JAVA_PORT_R}:${JAVA_PORT_R}"
            - "${BEDROCK_PORT_R}:${BEDROCK_PORT_R}/udp"
            - "${WEBCONSOLE_PORT_R}:${WEBCONSOLE_PORT_R}"
            - "${RCON_PORT_R}:${RCON_PORT_R}"
        environment:
            - TZ='Europe/Warsaw'
            - Port=${JAVA_PORT_R}
            - BedrockPort=${BEDROCK_PORT_R}
            - MaxMemory=${MAX_MEMORY_R}
        networks:
            - mc_net

    minecraft-p:
        image: 05jchambers/legendary-minecraft-purpur-geyser:latest
        container_name: minecraft-p
        stdin_open: true
        tty: true
        restart: unless-stopped
        volumes:
            - "${DATA_FOLDER_P}:/minecraft"
        ports:
            - "${JAVA_PORT_P}:${JAVA_PORT_P}"
            - "${BEDROCK_PORT_P}:${BEDROCK_PORT_P}/udp"
            - "${WEBCONSOLE_PORT_P}:${WEBCONSOLE_PORT_P}"
            - "${RCON_PORT_P}:${RCON_PORT_P}"
        environment:
            - TZ='Europe/Warsaw'
            - Port=${JAVA_PORT_P}
            - BedrockPort=${BEDROCK_PORT_P}
            - MaxMemory=${MAX_MEMORY_P}
        networks:
            - mc_net

volumes:
    database-data:

networks:
    mc_net:
