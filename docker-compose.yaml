name: mc

services:

    accesspanel:
        build:
            context: .
            dockerfile: docker/accesspanel/Dockerfile
            target: build-dev
        depends_on:
            database:
                condition: service_healthy
        container_name: accesspanel
        restart: unless-stopped
        tty: true
        stdin_open: true
        ports:
            - "${APP_EXTERNAL_HTTP_PORT}:80"
        environment:
            - CONFIGURE_MINECRAFT_HOSTS=${HOST_NAME_P} ${HOST_NAME_R} ${HOST_NAME_K}
            - CONFIGURE_MINECRAFT_RCON_PORTS=${RCON_PORT_P} ${RCON_PORT_R} ${RCON_PORT_K}
            - CONFIGURE_MINECRAFT_RCON_PASSWORDS=${RCON_PASSWORD_P} ${RCON_PASSWORD_R} ${RCON_PASSWORD_K}
            - CONFIGURE_MINECRAFT_JAVA_PORTS=${JAVA_PORT_P} ${JAVA_PORT_R} ${JAVA_PORT_K}
            - CONFIGURE_MINECRAFT_BEDROCK_PORTS=${BEDROCK_PORT_P} ${BEDROCK_PORT_R} ${BEDROCK_PORT_K}
            - CONFIGURE_EXTERNAL_DOMAINS=${EXTERNAL_DOMAIN_P} ${EXTERNAL_DOMAIN_R} ${EXTERNAL_DOMAIN_K}
        labels:
            - "traefik.enable=true"
            - ${TRAEFIK_WHOAMI_RULE_FOR_APPLICATION}
            - "traefik.http.routers.whoami.entrypoints=websecure"
            - "traefik.http.routers.whoami.tls.certresolver=myresolver"
        networks:
            - mc_net

    database:
        image: mariadb:11.7
        container_name: database
        restart: unless-stopped
        volumes:
            - "./local/mysql_data:/var/lib/mysql"
        healthcheck:
            test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
            start_period: 10s
            interval: 5s
            timeout: 4s
            retries: 10
        environment:
            - MARIADB_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
            - MARIADB_USER=${DATABASE_USERNAME}
            - MARIADB_PASSWORD=${DATABASE_PASSWORD}
            - MARIADB_DATABASE=${DATABASE_NAME}
        networks:
            - mc_net

    traefik:
        image: traefik:v3.3
        container_name: traefik
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entryPoints.websecure.address=:443"
            - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
            - "--certificatesresolvers.myresolver.acme.email=${TRAEFIK_LETSENCRYPT_EMAIL}"
            - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
        ports:
            - "${TRAEFIK_HTTP_PORT}:80"
            - "${TRAEFIK_HTTPS_PORT}:443"
            - "${TRAEFIK_DASHBOARD_PORT}:8080"
        volumes:
            - "./local/traefik_letsencrypt:/letsencrypt"
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        networks:
            - mc_net

    minecraft-p:
        build:
            context: .
            dockerfile: docker/minecraft/Dockerfile
            target: build-dev
        container_name: minecraft-p
        stdin_open: true
        tty: true
        restart: unless-stopped
        volumes:
            - "./local/minecraft-p:/minecraft"
        ports:
            - "${JAVA_PORT_P}:${JAVA_PORT_P}"
            - "${BEDROCK_PORT_P}:${BEDROCK_PORT_P}/udp"
            - "${RCON_PORT_P}:${RCON_PORT_P}"
        environment:
            - TZ='Europe/Warsaw'
            - Port=${JAVA_PORT_P}
            - BedrockPort=${BEDROCK_PORT_P}
            - MaxMemory=8192
            - CONFIGURE_RCON_PORT=${RCON_PORT_P}
            - CONFIGURE_RCON_PASSWORD=${RCON_PASSWORD_P}
        networks:
            - mc_net

    minecraft-r:
        build:
            context: .
            dockerfile: docker/minecraft/Dockerfile
            target: build-dev
        container_name: minecraft-r
        stdin_open: true
        tty: true
        restart: unless-stopped
        volumes:
            - "./local/minecraft-r:/minecraft"
        ports:
            - "${JAVA_PORT_R}:${JAVA_PORT_R}"
            - "${BEDROCK_PORT_R}:${BEDROCK_PORT_R}/udp"
            - "${RCON_PORT_R}:${RCON_PORT_R}"
        environment:
            - TZ='Europe/Warsaw'
            - Port=${JAVA_PORT_R}
            - BedrockPort=${BEDROCK_PORT_R}
            - MaxMemory=8192
            - CONFIGURE_RCON_PORT=${RCON_PORT_R}
            - CONFIGURE_RCON_PASSWORD=${RCON_PASSWORD_R}
        networks:
            - mc_net

    minecraft-k:
        build:
            context: .
            dockerfile: docker/minecraft/Dockerfile
            target: build-dev
        container_name: minecraft-k
        stdin_open: true
        tty: true
        restart: unless-stopped
        volumes:
            - "./local/minecraft-k:/minecraft"
        ports:
            - "${JAVA_PORT_K}:${JAVA_PORT_K}"
            - "${BEDROCK_PORT_K}:${BEDROCK_PORT_K}/udp"
            - "${RCON_PORT_K}:${RCON_PORT_K}"
        environment:
            - TZ='Europe/Warsaw'
            - Port=${JAVA_PORT_K}
            - BedrockPort=${BEDROCK_PORT_K}
            - MaxMemory=8192
            - CONFIGURE_RCON_PORT=${RCON_PORT_K}
            - CONFIGURE_RCON_PASSWORD=${RCON_PASSWORD_K}
        networks:
            - mc_net

networks:
    mc_net:
